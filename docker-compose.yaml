version: '3.8'

services:
  # --- SPRING CLOUD INFRASTRUCTURE ---
  eureka-server:
    build: eureka-server/.
    image: mouadd9/eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring-cloud-network

  config-server:
    build: config-server/.
    image: mouadd9/config-server
    healthcheck:
      test: "wget -T5 -qO- http://localhost:9999/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - eureka-server
    networks:
      - spring-cloud-network

  # --- AUTHENTICATION SERVICE ---
  keycloak_db:
    image: postgres:15
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring-cloud-network

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak # Use the service name 'keycloak_db'
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    ports:
      - "8180:8080"
    depends_on:
      keycloak_db:
        condition: service_healthy
    command:
      - "start-dev"
    networks:
      - spring-cloud-network

  # --- APPLICATION MICROSERVICES ---
  api-gateway:
    build: api-gateway/.
    image: mouadd9/api-gateway
    ports:
      - "8888:8888"
    depends_on:
      - eureka-server
      - config-server
    networks:
      - spring-cloud-network

  content-service:
    build: content-service/.
    image: mouadd9/content-service
    healthcheck:
      test: "wget -T5 -qO- http://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - eureka-server
      - config-server
      - content_db
    networks:
      - spring-cloud-network

  instance-service:
    build: instance-service/.
    image: mouadd9/instance-service
    depends_on:
      - eureka-server
      - config-server
      - instance_db
      - content-service
    networks:
      - spring-cloud-network

  progression-service:
    build: progression-service/.
    image: mouadd9/progression-service
    depends_on:
      - eureka-server
      - config-server
      - progression_db
      - content-service
    networks:
      - spring-cloud-network

  # --- APPLICATION DATABASES ---
  content_db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 'root_password'
      MYSQL_DATABASE: 'content_db'
      MYSQL_USER: 'content_db_user'
      MYSQL_PASSWORD: 'password'
    networks:
      - spring-cloud-network

  instance_db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 'root_password'
      MYSQL_DATABASE: 'instance_db'
      MYSQL_USER: 'instance_db_user'
      MYSQL_PASSWORD: 'password'
    networks:
      - spring-cloud-network

  progression_db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 'root_password'
      MYSQL_DATABASE: 'progression_db'
      MYSQL_USER: 'progression_db_user'
      MYSQL_PASSWORD: 'password'
    networks:
      - spring-cloud-network

# --- NAMED VOLUMES ---
volumes:
  keycloak_db_data:

# --- SHARED NETWORK ---
networks:
  spring-cloud-network:
    driver: bridge